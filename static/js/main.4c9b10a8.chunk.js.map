{"version":3,"sources":["components/Header/Header.ts","components/SearchBar/SearchBar.tsx","components/CurrentWeather/CurrentWeather.tsx","components/OtherDetails/subcomponents/DayDetails.tsx","components/OtherDetails/subcomponents/AirDetails.tsx","components/OtherDetails/subcomponents/TemperatureDetails.tsx","components/OtherDetails/OtherDetails.tsx","components/WindConditions/WindConditions.tsx","components/WeatherDetails/WeatherDetails.tsx","api/api.ts","utils/theme.ts","fonts/Righteous-Regular.ttf","fonts/Montserrat-Regular.ttf","fonts/Montserrat-Medium.ttf","fonts/Montserrat-SemiBold.ttf","fonts/Montserrat-Bold.ttf","fonts/Montserrat-ExtraBold.ttf","fonts/fonts.ts","App.tsx","index.tsx"],"names":["Header","styled","header","theme","fontSizes","lg","colors","primary","media","hd","Bar","div","tilesBackground","shadow","tablet","CityNameWrapper","Icon","Location","CityName","p","CountryName","InputWrapper","desktop","Input","input","secondary","Button","button","SearchBar","setCityName","city","country","inputRef","useRef","type","placeholder","size","ref","onClick","current","value","toLowerCase","trim","Container","Title","Temperature","Sky","IconDescription","OtherConditions","ul","CurrentWeather","props","icon","weather","temp","weatherIcon","description","realFeel","humidity","pressure","uvIndex","SunIcon","Sunny","MoonIcon","Moon","DayDetails","day","sunrise","sunset","moonrise","moonset","AirDetails","air","index","pm2_5","pm10","no2","so2","o3","determineAirQuality","TemperatureDetails","temperatureInfo","min","max","avg","OtherDetails","WindConditions","wind","speed","direction","degree","Grid","WeatherDetails","WEATHER_KEY","evaluateDirection","degrees","directions","Math","floor","length","fetchWeatherConditions","a","weatherURL","fetch","fetchedData","json","weatherData","cityCoords","name","sys","lat","round","coord","lon","currentWeather","main","feels_like","deg","temp_min","temp_max","fetchAirConditions","coords","airURL","list","components","modifiedData","aqi","fetchAstronomicalData","astroURL","astroData","background","fontWeights","thin","regular","bold","sm","md","createGlobalStyle","Righteous","MontserratRegular","MontserratMedium","MontserratSemiBold","MontserratBold","MontserratExtraBold","GlobalStyles","Wrapper","Loading","h1","ErrorMessage","App","useState","searchedCityName","setSearchedCityName","setCityCoords","setCurrentWeather","setWind","setAir","setTemperatureInfo","setDay","useQuery","data","error","isSuccess","isLoading","airData","airFetchIsSuccess","astroFetchIsSuccess","useEffect","console","log","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","ReactDOM","render","StrictMode","QueryClientProvider","client","initialIsOpen","document","getElementById"],"mappings":"6QAaeA,EAXAC,IAAOC,OAAV,sJACG,qBAAGC,MAAkBC,UAAUC,MAGnC,qBAAGF,MAAkBG,OAAOC,WAEnC,qBAAGJ,MAAkBK,MAAMC,M,eCJzBC,EAAMT,IAAOU,IAAV,uSAMO,qBAAGR,MAAkBG,OAAOM,mBAE5B,qBAAGT,MAAkBU,UAEjC,qBAAGV,MAAkBK,MAAMM,UAI3B,qBAAGX,MAAkBK,MAAMC,MAMzBM,EAAkBd,IAAOU,IAAV,4GAIjB,qBAAGR,MAAkBK,MAAMM,UAKzBE,EAAOf,YAAOgB,IAAPhB,CAAH,kIACC,qBAAGE,MAAkBG,OAAOC,WAGnC,qBAAGJ,MAAkBK,MAAMM,UAI3B,qBAAGX,MAAkBK,MAAMC,MAKzBS,EAAWjB,IAAOkB,EAAV,2JAMV,qBAAGhB,MAAkBK,MAAMC,MAKzBW,EAAcnB,IAAOkB,EAAV,8HAGN,qBAAGhB,MAAkBG,OAAOC,WAEnC,qBAAGJ,MAAkBK,MAAMC,MAKzBY,EAAepB,IAAOU,IAAV,0RAQd,qBAAGR,MAAkBK,MAAMM,UAI3B,qBAAGX,MAAkBK,MAAMc,WAK3B,qBAAGnB,MAAkBK,MAAMC,MAKzBc,EAAQtB,IAAOuB,MAAV,yRASW,qBAAGrB,MAAkBG,OAAOmB,aAG9C,qBAAGtB,MAAkBK,MAAMc,WAKzBI,EAASzB,IAAO0B,OAAV,iRAGU,qBAAGxB,MAAkBG,OAAOC,WAQ9C,qBAAGJ,MAAkBK,MAAMc,WAqChBM,GAzBqB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClDC,EAAWC,iBAAgC,MASjD,OACE,eAACvB,EAAD,WACE,eAACK,EAAD,WACE,cAACC,EAAD,IACA,cAACE,EAAD,UAAWY,IACX,eAACV,EAAD,gBAAgBW,QAElB,eAACV,EAAD,WACE,cAACE,EAAD,CAAOW,KAAK,OAAOC,YAAY,qBAAqBC,KAAM,GAAIC,IAAKL,IACnE,cAACN,EAAD,CAAQY,QAhBS,YACrB,OAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAUO,WACZV,EAAYG,EAASO,QAAQC,MAAMC,cAAcC,QACjDV,EAASO,QAAQC,MAAQ,KAavB,2B,sDCxIFG,GAAY1C,IAAOU,IAAV,iRAKC,qBAAGR,MAAkBG,OAAOM,mBAE5B,qBAAGT,MAAkBU,UAGjC,qBAAGV,MAAkBK,MAAMc,WAI3B,qBAAGnB,MAAkBK,MAAMC,MAKzBmC,GAAQ3C,IAAOkB,EAAV,0IAKP,qBAAGhB,MAAkBK,MAAMC,MAKzBoC,GAAc5C,IAAOkB,EAAV,sPAIN,qBAAGhB,MAAkBG,OAAOC,WAMnC,qBAAGJ,MAAkBK,MAAMC,MAUzBqC,GAAM7C,IAAOU,IAAV,+PAMa,qBAAGR,MAAkBG,OAAOC,WAG9C,qBAAGJ,MAAkBK,MAAMC,MAMzBO,GAAOf,IAAOU,IAAV,wLAKN,qBAAGR,MAAkBK,MAAMM,UAK3B,qBAAGX,MAAkBK,MAAMC,MAMzBsC,GAAkB9C,IAAOkB,EAAV,wGAIjB,qBAAGhB,MAAkBK,MAAMC,MAKzBuC,GAAkB/C,IAAOgD,GAAV,8UAajB,qBAAG9C,MAAkBK,MAAMC,MA0DhByC,GA7CuC,SAACC,GAAW,IAGrCC,EAHoC,EACmBD,EAAME,QAAhFC,EADuD,EACvDA,KAAMC,EADiD,EACjDA,YAAaC,EADoC,EACpCA,YAAaC,EADuB,EACvBA,SAAUC,EADa,EACbA,SAAUC,EADG,EACHA,SAAUC,EADP,EACOA,QAWtE,OACE,eAACjB,GAAD,WACE,cAACC,GAAD,8BACA,eAACC,GAAD,WACGS,EACD,4CAEF,eAACR,GAAD,WACE,cAAC,GAAD,WAjBqBM,EAiBIG,EAhBhB,UAATH,EAAyB,cAAC,KAAD,IAChB,WAATA,EAA0B,cAAC,KAAD,IACjB,SAATA,EAAwB,cAAC,KAAD,IACf,SAATA,GAA4B,YAATA,EAA2B,cAAC,KAAD,IACrC,iBAATA,EAAgC,cAAC,KAAD,IACvB,SAATA,GAA4B,QAATA,EAAuB,cAAC,KAAD,SAA9C,KAYI,cAACL,GAAD,UAAkBS,OAEpB,eAACR,GAAD,WACE,+BACE,yCACA,wCAAOS,GAAP,cAEF,+BACE,yCACA,sCAAOC,EAAP,UAEF,+BACE,yCACA,sCAAOC,EAAP,aAEF,+BACE,yCACA,4BAAIC,c,SChKRjB,GAAY1C,IAAOU,IAAV,qkCAyCT,qBAAGR,MAAkBK,MAAMM,UAgB3B,qBAAGX,MAAkBK,MAAMc,WAM3B,qBAAGnB,MAAkBK,MAAMC,MAQ3BoD,GAAU5D,YAAO6D,KAAP7D,CAAH,+FAEF,qBAAGE,MAAkBG,OAAOC,WAEnC,qBAAGJ,MAAkBK,MAAMC,MAKzBsD,GAAW9D,YAAO+D,KAAP/D,CAAH,+FAEH,qBAAGE,MAAkBG,OAAOC,WAEnC,qBAAGJ,MAAkBK,MAAMC,MAoChBwD,GA3B+B,SAAC,GAAqD,IAAD,IAAlDC,IAAOC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,QACjF,OACE,eAAC,GAAD,WACE,gCACE,cAACT,GAAD,IACA,6CACA,4BAAIM,OAEN,gCACE,cAACN,GAAD,IACA,4CACA,4BAAIO,OAEN,gCACE,cAACL,GAAD,IACA,8CACA,4BAAIM,OAEN,gCACE,cAACN,GAAD,IACA,6CACA,4BAAIO,WCnHN3B,GAAY1C,IAAOU,IAAV,y6CAkBS,qBAAGR,MAAkBG,OAAOmB,aACpB,qBAAGtB,MAAkBG,OAAOC,WAyB3C,qBAAGJ,MAAkBG,OAAOC,WAUzC,qBAAGJ,MAAkBK,MAAMM,UAK3B,qBAAGX,MAAkBK,MAAMC,MAgFhB8D,GA1C+B,SAACpB,GAAW,IAAD,EACVA,EAAMqB,IAA3CC,EAD+C,EAC/CA,MAAOC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,KAAMC,EAD2B,EAC3BA,IAAKC,EADsB,EACtBA,IAAKC,EADiB,EACjBA,GAQtC,OACE,eAAC,GAAD,WACE,wDACA,gCACE,4BAAIL,IACJ,4BAXsB,SAACA,GAG3B,MAFe,CAAC,OAAQ,OAAQ,WAAY,OAAQ,aAEtCA,EAAQ,GAQdM,CAAoBN,QAE1B,+BACE,+BACE,4BAAIC,IACJ,yCAEF,+BACE,4BAAIC,IACJ,wCAEF,+BACE,4BAAIC,IACJ,uCAEF,+BACE,4BAAIC,IACJ,uCAEF,+BACE,4BAAIC,IACJ,6CCpIJnC,GAAY1C,IAAOU,IAAV,ofAkBX,qBAAGR,MAAkBK,MAAMC,MA2ChBuE,GAxB+C,SAAC,GAExD,IAAD,IADJC,gBAAmBC,EACf,EADeA,IAAKC,EACpB,EADoBA,IAAKC,EACzB,EADyBA,IAE7B,OACE,eAAC,GAAD,WACE,iDACA,+BACE,+BACE,yCACA,4BAAIF,OAEN,+BACE,yCACA,4BAAIC,OAEN,+BACE,yCACA,4BAAIC,cClDRzC,GAAY1C,IAAOU,IAAV,geASC,qBAAGR,MAAkBG,OAAOM,mBAE5B,qBAAGT,MAAkBU,UAEjC,qBAAGV,MAAkBK,MAAMM,UAU3B,qBAAGX,MAAkBK,MAAMc,WAqBhB+D,GAVmC,SAAC,GAAmC,IAAjCb,EAAgC,EAAhCA,IAAKS,EAA2B,EAA3BA,gBAAiBf,EAAU,EAAVA,IACzE,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAYA,IAAKA,IACjB,cAAC,GAAD,CAAYM,IAAKA,IACjB,cAAC,GAAD,CAAoBS,gBAAiBA,QC3CrCtC,GAAY1C,IAAOU,IAAV,8kCAGC,qBAAGR,MAAkBG,OAAOM,mBAE5B,qBAAGT,MAAkBU,UAmCtB,qBAAGV,MAAkBG,OAAOC,WAIvC,qBAAGJ,MAAkBK,MAAMc,WAiB3B,qBAAGnB,MAAkBK,MAAMC,MA8BhB6E,GAnBuC,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,OACjF,OACE,eAAC,GAAD,WACE,gCACE,2CACA,8BAAIF,EAAJ,cAEF,gCACE,+CACA,4BAAIC,OAEN,gCACE,4CACA,4BAAIC,WC3ENC,GAAO1F,IAAOU,IAAV,kVAKN,qBAAGR,MAAkBK,MAAMM,UAI3B,qBAAGX,MAAkBK,MAAMc,WAK3B,qBAAGnB,MAAkBK,MAAMC,MA+BhBmF,GAhBuC,SAAC,GAMhD,IALLvC,EAKI,EALJA,QACAmB,EAII,EAJJA,IACAe,EAGI,EAHJA,KACAN,EAEI,EAFJA,gBACAf,EACI,EADJA,IAEA,OACE,eAACyB,GAAD,WACE,cAAC,GAAD,CAAgBtC,QAASA,IACzB,cAAC,GAAD,CAAgBkC,KAAMA,IACtB,cAAC,GAAD,CAAcf,IAAKA,EAAKS,gBAAiBA,EAAiBf,IAAKA,Q,6BC7C/D2B,GAAc,mCAUdC,GAAoB,SAACC,GACzB,IAAMC,EAAa,CAAC,WAAO,YAAQ,WAAO,YAAQ,WAAO,YAAQ,WAAO,aAGxE,OAAOA,EAFOC,KAAKC,MAAMH,EAAU,IAETC,EAAWG,SAG1BC,GAAsB,yCAAG,WAAOtE,GAAP,4BAAAuE,EAAA,6DAC9BC,EAD8B,4DACoCxE,EADpC,kBACkD+D,GADlD,0BAGVU,MAAMD,GAHI,cAG9BE,EAH8B,gBAIVA,EAAYC,OAJF,cAI9BC,EAJ8B,OAM9BC,EAA0B,CAC9B7E,KAAM4E,EAAYE,KAClB7E,QAAS2E,EAAYG,IAAI9E,QACzB+E,IAAKb,KAAKc,MAAML,EAAYM,MAAMF,KAClCG,IAAKhB,KAAKc,MAAML,EAAYM,MAAMC,MAG9BC,EAAkC,CACtC5D,KAAM2C,KAAKc,MAAML,EAAYS,KAAK7D,MAClCC,YAAamD,EAAYrD,QAAQ,GAAG8D,KACpC3D,YAAakD,EAAYrD,QAAQ,GAAGG,YACpCC,SAAUwC,KAAKc,MAAML,EAAYS,KAAKC,YACtC1D,SAAUgD,EAAYS,KAAKzD,SAC3BC,SAAU+C,EAAYS,KAAKxD,SAC3BC,QAAS,GAGL2B,EAAc,CAClBC,MAAOS,KAAKc,MAAML,EAAYnB,KAAKC,OACnCC,UAAWK,GAAkBY,EAAYnB,KAAK8B,KAC9C3B,OAAQgB,EAAYnB,KAAK8B,KAGrBpC,EAAoC,CACxCC,IAAKe,KAAKc,MAAML,EAAYS,KAAKG,UACjCnC,IAAKc,KAAKc,MAAML,EAAYS,KAAKI,UACjCnC,IAAKa,KAAKc,OAAOL,EAAYS,KAAKI,SAAWb,EAAYS,KAAKG,UAAY,IAhCxC,kBAmC7B,CAAEX,aAAYO,iBAAgB3B,OAAMN,oBAnCP,4CAAH,sDAsCtBuC,GAAkB,yCAAG,WAAOC,GAAP,sCAAApB,EAAA,6DACxBS,EAAaW,EAAbX,IAAKG,EAAQQ,EAARR,IAEPS,EAH0B,oEAG4CZ,EAH5C,gBAGuDG,EAHvD,kBAGoEpB,IAHpE,SAKNU,MAAMmB,GALA,cAK1BlB,EAL0B,gBAMdA,EAAYC,OANE,cAM1BjC,EAN0B,SAQMA,EAAImD,KAAK,GAAGC,WAA1ClD,EARwB,EAQxBA,MAAOC,EARiB,EAQjBA,KAAMC,EARW,EAQXA,IAAKC,EARM,EAQNA,IAAKC,EARC,EAQDA,GAEzB+C,EAAe,CACnBpD,MAAOD,EAAImD,KAAK,GAAGR,KAAKW,IACxBpD,MAAOuB,KAAKc,MAAMrC,GAClBC,KAAMsB,KAAKc,MAAMpC,GACjBC,IAAKqB,KAAKc,MAAMnC,GAChBC,IAAKoB,KAAKc,MAAMlC,GAChBC,GAAImB,KAAKc,MAAMjC,IAhBe,kBAmBzB+C,GAnByB,4CAAH,sDAsBlBE,GAAqB,yCAAG,WAAON,GAAP,0BAAApB,EAAA,6DAI3BY,EAAaQ,EAAbR,IAAKH,EAAQW,EAARX,IAEPkB,EAN6B,wDA5Ef,mCA4Ee,gBAMoDlB,EANpD,iBAMgEG,GANhE,SAQTV,MAAMyB,GARG,cAQ7BxB,EAR6B,gBASXA,EAAYC,OATD,cAS7BwB,EAT6B,OAW7BJ,EAAkC,CACtC1D,QAAS8D,EAAU9D,QACnBC,OAAQ6D,EAAU7D,OAClBC,SAAU4D,EAAU5D,SACpBC,QAAS2D,EAAU3D,SAfc,kBAkB5BuD,GAlB4B,4CAAH,sDC7DnB1H,GAzBD,CACZG,OAAQ,CACNC,QAAS,YACTkB,UAAW,UACXyG,WAAY,UACZtH,gBAAiB,WAEnBuH,YAAa,CACXC,KAAM,IACNC,QAAS,IACTC,KAAM,KAERlI,UAAW,CACTmI,GAAI,QACJC,GAAI,OACJnI,GAAI,QAENG,MAAO,CACLM,OAAQ,4BACRQ,QAAS,4BACTb,GAAG,8BAELI,OAAQ,kCCtBK,OAA0B,8CCA1B,OAA0B,+CCA1B,OAA0B,8CCA1B,OAA0B,gDCA1B,OAA0B,4CCA1B,OAA0B,iDCS1B4H,eAAf,q3BAGmBC,GAOAC,GAOAC,GAOAC,GAOAC,GAOAC,IChCbC,GAAeP,YAAH,mPAGA,qBAAGtI,MAAkBG,OAAO4H,cAYxCe,GAAUhJ,IAAOU,IAAV,mLAKT,qBAAGR,MAAkBK,MAAMM,UAI3B,qBAAGX,MAAkBK,MAAMC,MAKzByI,GAAUjJ,IAAOkJ,GAAV,imBA6BPC,GAAenJ,IAAOU,IAAV,uWAed,qBAAGR,MAAkBK,MAAMC,MAsGhB4I,GA3FO,WAAO,IAAD,EACsBC,mBAAwB,UAD9C,mBACnBC,EADmB,KACDC,EADC,OAEUF,mBAAS,CAC3CxH,KAAM,SACNC,QAAS,KACTkF,IAAK,GACLH,IAAK,KANmB,mBAEnBH,EAFmB,KAEP8C,EAFO,OAQkBH,qBARlB,mBAQnBpC,EARmB,KAQHwC,EARG,OASFJ,qBATE,mBASnB/D,EATmB,KASboE,EATa,OAUJL,qBAVI,mBAUnB9E,EAVmB,KAUdoF,EAVc,OAWoBN,qBAXpB,mBAWnBrE,EAXmB,KAWF4E,EAXE,OAYJP,qBAZI,mBAYnBpF,EAZmB,KAYd4F,EAZc,OAciCC,YACzD,CAAC,UAAWR,IACZ,kBAAMnD,GAAuBmD,MAFjB7C,EAdY,EAclBsD,KAAmBC,EAdD,EAcCA,MAAOC,EAdR,EAcQA,UAAWC,EAdnB,EAcmBA,UAdnB,EAkB8BJ,YAAS,CAAC,MAAOpD,IAAa,kBACpFa,GAAmBb,MADPyD,EAlBY,EAkBlBJ,KAA0BK,EAlBR,EAkBHH,UAlBG,EAqBkCH,YAAS,CAAC,QAASpD,IAAa,kBAC1FoB,GAAsBpB,MADVsB,EArBY,EAqBlB+B,KAA4BM,EArBV,EAqBDJ,UAIzBK,qBAAU,WACJ7D,IACF+C,EAAa,OAAC/C,QAAD,IAACA,OAAD,EAACA,EAAaC,YAC3B+C,EAAiB,OAAChD,QAAD,IAACA,OAAD,EAACA,EAAaQ,gBAC/ByC,EAAO,OAACjD,QAAD,IAACA,OAAD,EAACA,EAAanB,MACrBsE,EAAkB,OAACnD,QAAD,IAACA,OAAD,EAACA,EAAazB,oBAEjC,CAACyB,IAEJ6D,qBAAU,WACJF,GACFT,EAAOQ,GAGLE,GACFR,EAAO7B,KAER,CAACmC,EAASnC,IA8Bb,OACE,eAAC,IAAD,CAAe9H,MAAOA,GAAtB,UACE,cAAC6I,GAAD,IACA,cAAC,GAAD,IACA,eAACC,GAAD,WACE,cAAC,EAAD,0BACC/B,GAAkBP,EACjB,cAAC,GAAD,CACE9E,YAAa2H,EACb1H,KAAM6E,EAAW7E,KACjBC,QAAS4E,EAAW5E,UAEpB,KAvCJoI,EACK,cAACjB,GAAD,sCAGLgB,EACKhD,GAAkB1C,GAAOe,GAAQN,GAAmBf,EACzD,cAAC,GAAD,CACEb,QAAS6D,EACT1C,IAAKA,EACLe,KAAMA,EACNN,gBAAiBA,EACjBf,IAAKA,IAEL,KAGF+F,GACFO,QAAQC,IAAIR,GAEV,eAACb,GAAD,WACE,kFACA,oDALN,SCzJEsB,GAAc,IAAIC,IAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,EACtBC,MAAO,MAKbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAqBC,OAAQV,GAA7B,UACE,cAAC,GAAD,IACA,cAAC,qBAAD,CAAoBW,eAAe,SAGvCC,SAASC,eAAe,W","file":"static/js/main.4c9b10a8.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  font-size: ${({ theme }) => theme.fontSizes.lg};\r\n  font-weight: 700;\r\n  font-family: 'Righteous';\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Location } from '@styled-icons/ionicons-solid';\r\n\r\nconst Bar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  margin: 20px 0;\r\n  padding: 5px 20px;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    margin-top: 60px;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nconst CityNameWrapper = styled.div`\r\n  display: flex;\r\n  min-width: 300px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled(Location)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  height: 40px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    height: 50px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\nconst CityName = styled.p`\r\n  align-self: flex-end;\r\n  padding-right: 5px;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst CountryName = styled.p`\r\n  padding-top: 10px;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  padding: 5px 0;\r\n  height: 40px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    height: 50px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    height: 55px;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  max-width: 800px;\r\n  padding-left: 20px;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  border: none;\r\n  border-radius: 15px 0 0 15px;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  outline: none;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 80px;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 1.1rem;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 0 15px 15px 0;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    width: 120px;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  setCityName: (name: string | null) => void;\r\n  city: string;\r\n  country: string;\r\n}\r\n\r\nconst SearchBar: React.FC<IProps> = ({ setCityName, city, country }) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const onClickHandler = () => {\r\n    if (inputRef?.current) {\r\n      setCityName(inputRef.current.value.toLowerCase().trim());\r\n      inputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Bar>\r\n      <CityNameWrapper>\r\n        <Icon />\r\n        <CityName>{city}</CityName>\r\n        <CountryName>/ {country}</CountryName>\r\n      </CityNameWrapper>\r\n      <InputWrapper>\r\n        <Input type=\"text\" placeholder=\"search location...\" size={10} ref={inputRef} />\r\n        <Button onClick={onClickHandler}>search</Button>\r\n      </InputWrapper>\r\n    </Bar>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from 'styled-components';\r\nimport {\r\n  Rainy,\r\n  Cloud,\r\n  Sunny,\r\n  Thunderstorm,\r\n  Snow,\r\n  ReorderThree,\r\n} from '@styled-icons/ionicons-solid';\r\n\r\nimport { ICurrentWeather } from '../../interfaces';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  user-select: none;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    grid-row: 1/3;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    padding: 40px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.p`\r\n  align-self: flex-start;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst Temperature = styled.p`\r\n  margin: 40px 0;\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  span {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    margin: 70px 0;\r\n    font-size: 4rem;\r\n\r\n    span {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sky = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 5px 10px;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  border-radius: 15px;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    margin: 15px 0;\r\n    padding: 10px 20px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  color: white;\r\n  height: 40px;\r\n  width: 40px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    height: 50px;\r\n    width: 50px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n    width: 70px;\r\n  }\r\n`;\r\n\r\nconst IconDescription = styled.p`\r\n  color: white;\r\n  font-weight: 500;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst OtherConditions = styled.ul`\r\n  margin-top: 15px;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  list-style-type: none;\r\n\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid black;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 1.6rem;\r\n\r\n    li {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface CurrentWeatherProps {\r\n  weather: ICurrentWeather;\r\n}\r\n\r\nconst CurrentWeather: React.FC<CurrentWeatherProps> = (props) => {\r\n  const { temp, weatherIcon, description, realFeel, humidity, pressure, uvIndex } = props.weather;\r\n\r\n  const chooseWeatherIcon = (icon: string) => {\r\n    if (icon === 'Clear') return <Sunny />;\r\n    if (icon === 'Clouds') return <Cloud />;\r\n    if (icon === 'Snow') return <Snow />;\r\n    if (icon === 'Rain' || icon === 'Drizzle') return <Rainy />;\r\n    if (icon === 'Thunderstorm') return <Thunderstorm />;\r\n    if (icon === 'Mist' || icon === 'Fog') return <ReorderThree />;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Current Weather</Title>\r\n      <Temperature>\r\n        {temp}\r\n        <span>&#176;C</span>\r\n      </Temperature>\r\n      <Sky>\r\n        <Icon>{chooseWeatherIcon(weatherIcon)}</Icon>\r\n        <IconDescription>{description}</IconDescription>\r\n      </Sky>\r\n      <OtherConditions>\r\n        <li>\r\n          <p>RealFeel</p>\r\n          <p>{`${realFeel}`}&#176;C</p>\r\n        </li>\r\n        <li>\r\n          <p>Humidity</p>\r\n          <p>{`${humidity}%`}</p>\r\n        </li>\r\n        <li>\r\n          <p>Pressure</p>\r\n          <p>{`${pressure} hPa`}</p>\r\n        </li>\r\n        <li>\r\n          <p>UV-Index</p>\r\n          <p>{uvIndex}</p>\r\n        </li>\r\n      </OtherConditions>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import styled from 'styled-components';\r\nimport { Sunny, Moon } from '@styled-icons/ionicons-solid';\r\n\r\nimport { IAstronomicalData } from '../../../interfaces';\r\n\r\nconst Container = styled.div`\r\n  grid-area: day;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  div {\r\n    flex-basis: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 0;\r\n    border-bottom: 1px solid #999;\r\n    transition: background 0.3s;\r\n\r\n    &:first-child {\r\n      border-radius: 15px 0 0 0;\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      border-radius: 0 15px 0 0;\r\n    }\r\n\r\n    &:nth-child(even) {\r\n      border-left: 1px solid #999;\r\n    }\r\n\r\n    &:hover {\r\n      background: #ccc;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.8rem;\r\n\r\n      &:first-of-type {\r\n        margin: 10px 0 5px 0;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.media.tablet} {\r\n      flex-basis: 25%;\r\n\r\n      &:nth-child(2) {\r\n        border-right: 1px solid #999;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        border-radius: 0;\r\n      }\r\n\r\n      &:last-child {\r\n        border-radius: 0 15px 0 0;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.media.desktop} {\r\n      p {\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.media.hd} {\r\n      p {\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SunIcon = styled(Sunny)`\r\n  height: 40px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\nconst MoonIcon = styled(Moon)`\r\n  height: 40px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\ninterface DayDetailsProps {\r\n  day: IAstronomicalData;\r\n}\r\n\r\nconst DayDetails: React.FC<DayDetailsProps> = ({ day: { sunrise, sunset, moonrise, moonset } }) => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <SunIcon />\r\n        <p>Sunrise Time</p>\r\n        <p>{sunrise}</p>\r\n      </div>\r\n      <div>\r\n        <SunIcon />\r\n        <p>Sunset Time</p>\r\n        <p>{sunset}</p>\r\n      </div>\r\n      <div>\r\n        <MoonIcon />\r\n        <p>Moonrise Time</p>\r\n        <p>{moonrise}</p>\r\n      </div>\r\n      <div>\r\n        <MoonIcon />\r\n        <p>Moonset Time</p>\r\n        <p>{moonset}</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DayDetails;\r\n","import styled from 'styled-components';\r\n\r\nimport { IAir } from '../../../interfaces';\r\n\r\nconst Container = styled.div`\r\n  grid-area: air;\r\n\r\n  padding: 20px;\r\n  border-bottom: 1px solid #999;\r\n\r\n  & > p {\r\n    font-weight: 600;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 10px 0;\r\n    padding: 5px 20px;\r\n    font-weight: 500;\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    border-bottom: 10px solid ${({ theme }) => theme.colors.primary};\r\n    border-radius: 10px;\r\n\r\n    p:first-child {\r\n      font-size: 2rem;\r\n      font-weight: 800;\r\n    }\r\n\r\n    p:last-child {\r\n      font-weight: 700;\r\n      font-size: 1.2rem;\r\n      color: #666;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    display: flex;\r\n    list-style-type: none;\r\n\r\n    li {\r\n      flex-grow: 1;\r\n      text-align: center;\r\n\r\n      p:first-child {\r\n        font-weight: 700;\r\n        color: ${({ theme }) => theme.colors.primary};\r\n      }\r\n\r\n      p:last-child {\r\n        font-size: 0.7rem;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    border-right: 1px solid #999;\r\n    border-bottom: none;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    & > p {\r\n      font-size: 1.8rem;\r\n    }\r\n\r\n    div {\r\n      margin-top: 30px;\r\n      height: 90px;\r\n\r\n      p:first-child {\r\n        font-size: 3.5rem;\r\n      }\r\n\r\n      p:last-child {\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n\r\n    ul {\r\n      margin-top: 30px;\r\n      li {\r\n        p:first-child {\r\n          font-size: 1.8rem;\r\n        }\r\n\r\n        p:last-child {\r\n          font-size: 1.2rem;\r\n          font-weight: 600;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface AirDetailsProps {\r\n  air: IAir;\r\n}\r\n\r\nconst AirDetails: React.FC<AirDetailsProps> = (props) => {\r\n  const { index, pm2_5, pm10, no2, so2, o3 } = props.air;\r\n\r\n  const determineAirQuality = (index: number) => {\r\n    const levels = ['Good', 'Fair', 'Moderate', 'Poor', 'Very Poor'];\r\n\r\n    return levels[index - 1];\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <p>Air Quality Index (AQI)</p>\r\n      <div>\r\n        <p>{index}</p>\r\n        <p>{determineAirQuality(index)}</p>\r\n      </div>\r\n      <ul>\r\n        <li>\r\n          <p>{pm2_5}</p>\r\n          <p>pm2.5</p>\r\n        </li>\r\n        <li>\r\n          <p>{pm10}</p>\r\n          <p>pm10</p>\r\n        </li>\r\n        <li>\r\n          <p>{no2}</p>\r\n          <p>NO2</p>\r\n        </li>\r\n        <li>\r\n          <p>{so2}</p>\r\n          <p>SO2</p>\r\n        </li>\r\n        <li>\r\n          <p>{o3}</p>\r\n          <p>03</p>\r\n        </li>\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AirDetails;\r\n","import styled from 'styled-components';\r\n\r\nimport { ITemperatureInfo } from '../../../interfaces';\r\n\r\nconst Container = styled.div`\r\n  grid-area: temp;\r\n  padding: 20px;\r\n  font-weight: 500;\r\n  list-style-type: none;\r\n\r\n  & > p {\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid black;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    & > p {\r\n      margin-bottom: 30px;\r\n      font-size: 1.8rem;\r\n    }\r\n\r\n    li {\r\n      margin-bottom: 20px;\r\n      p {\r\n        font-size: 1.6rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface TemperatureDetailsProps {\r\n  temperatureInfo: ITemperatureInfo;\r\n}\r\n\r\nconst TemperatureDetails: React.FC<TemperatureDetailsProps> = ({\r\n  temperatureInfo: { min, max, avg },\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <p>Temperature-Info</p>\r\n      <ul>\r\n        <li>\r\n          <p>Min Temp</p>\r\n          <p>{min}</p>\r\n        </li>\r\n        <li>\r\n          <p>Max Temp</p>\r\n          <p>{max}</p>\r\n        </li>\r\n        <li>\r\n          <p>Avg Temp</p>\r\n          <p>{avg}</p>\r\n        </li>\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TemperatureDetails;\r\n","import styled from 'styled-components';\r\n\r\nimport DayDetails from './subcomponents/DayDetails';\r\nimport AirDetails from './subcomponents/AirDetails';\r\nimport TemperatureDetails from './subcomponents/TemperatureDetails';\r\n\r\nimport { IAir, ITemperatureInfo, IAstronomicalData } from '../../interfaces';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: repeat(3, auto);\r\n  grid-template-areas:\r\n    'day day'\r\n    'air air'\r\n    'temp temp';\r\n  margin-bottom: 50px;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    grid-column: 1/3;\r\n    margin-bottom: 0;\r\n\r\n    grid-template-rows: 40% 60%;\r\n    grid-template-areas:\r\n      'day day'\r\n      'air temp';\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    grid-column: 2/3;\r\n  }\r\n`;\r\n\r\ninterface OtherDetailsProps {\r\n  air: IAir;\r\n  temperatureInfo: ITemperatureInfo;\r\n  day: IAstronomicalData;\r\n}\r\n\r\nconst OtherDetails: React.FC<OtherDetailsProps> = ({ air, temperatureInfo, day }) => {\r\n  return (\r\n    <Container>\r\n      <DayDetails day={day} />\r\n      <AirDetails air={air} />\r\n      <TemperatureDetails temperatureInfo={temperatureInfo} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OtherDetails;\r\n","import styled from 'styled-components';\r\n\r\nimport { IWind } from '../../interfaces';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  user-select: none;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    padding: 10px 0;\r\n    transition: background 0.3s;\r\n\r\n    &:first-child {\r\n      border-radius: 15px 15px 0 0;\r\n    }\r\n\r\n    &:last-child {\r\n      border-radius: 0 0 15px 15px;\r\n    }\r\n\r\n    &:not(:last-child) {\r\n      border-bottom: 1px solid #999;\r\n    }\r\n\r\n    &:hover {\r\n      background: #ccc;\r\n    }\r\n\r\n    p:first-child {\r\n      margin-bottom: 5px;\r\n      font-weight: 700;\r\n    }\r\n\r\n    p:last-child {\r\n      font-weight: 700;\r\n      color: ${({ theme }) => theme.colors.primary};\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    flex-direction: row;\r\n\r\n    div:not(:last-child) {\r\n      border-bottom: none;\r\n      border-right: 1px solid #999;\r\n    }\r\n\r\n    div:first-child {\r\n      border-radius: 15px 0 0 15px;\r\n    }\r\n\r\n    div:last-child {\r\n      border-radius: 0 15px 15px 0;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    p {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface WindConditionsProps {\r\n  wind: IWind;\r\n}\r\n\r\nconst WindConditions: React.FC<WindConditionsProps> = ({ wind: { speed, direction, degree } }) => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <p>Wind Speed</p>\r\n        <p>{speed} km/h</p>\r\n      </div>\r\n      <div>\r\n        <p>Wind Direction</p>\r\n        <p>{direction}</p>\r\n      </div>\r\n      <div>\r\n        <p>Wind Degree</p>\r\n        <p>{degree}</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WindConditions;\r\n","import styled from 'styled-components';\r\n\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport OtherDetails from '../OtherDetails/OtherDetails';\r\nimport WindConditions from '../WindConditions/WindConditions';\r\n\r\nimport {\r\n  ICurrentWeather,\r\n  IAir,\r\n  IWind,\r\n  ITemperatureInfo,\r\n  IAstronomicalData,\r\n} from '../../interfaces';\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 15px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    grid-template-columns: 2fr 1fr;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    grid-template-columns: 2fr 3fr;\r\n    grid-template-rows: auto auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    grid-template-columns: 3fr 7fr;\r\n    grid-template-rows: auto auto;\r\n    gap: 25px;\r\n  }\r\n`;\r\n\r\ninterface WeatherDetailsProps {\r\n  weather: ICurrentWeather;\r\n  air: IAir;\r\n  wind: IWind;\r\n  temperatureInfo: ITemperatureInfo;\r\n  day: IAstronomicalData;\r\n}\r\n\r\nconst WeatherDetails: React.FC<WeatherDetailsProps> = ({\r\n  weather,\r\n  air,\r\n  wind,\r\n  temperatureInfo,\r\n  day,\r\n}) => {\r\n  return (\r\n    <Grid>\r\n      <CurrentWeather weather={weather} />\r\n      <WindConditions wind={wind} />\r\n      <OtherDetails air={air} temperatureInfo={temperatureInfo} day={day} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","import {\r\n  ICityCoords,\r\n  ICurrentWeather,\r\n  IWind,\r\n  IAir,\r\n  ITemperatureInfo,\r\n  IAstronomicalData,\r\n} from '../interfaces';\r\n\r\nconst WEATHER_KEY = '027a8465a4b7db22cb00cc2655cd0849';\r\nconst ASTRONOMY_KEY = '2180e19e9e834b95aa55747ecc772869';\r\n\r\ninterface IWeatherConditions {\r\n  cityCoords: ICityCoords;\r\n  currentWeather: ICurrentWeather;\r\n  wind: IWind;\r\n  temperatureInfo: ITemperatureInfo;\r\n}\r\n\r\nconst evaluateDirection = (degrees: number) => {\r\n  const directions = ['↑ N', '↗ NE', '→ E', '↘ SE', '↓ S', '↙ SW', '← W', '↖ NW'];\r\n  const value = Math.floor(degrees / 45);\r\n\r\n  return directions[value % directions.length];\r\n};\r\n\r\nexport const fetchWeatherConditions = async (city: string | null): Promise<IWeatherConditions> => {\r\n  const weatherURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${WEATHER_KEY}&units=metric`;\r\n\r\n  const fetchedData = await fetch(weatherURL);\r\n  const weatherData = await fetchedData.json();\r\n\r\n  const cityCoords: ICityCoords = {\r\n    city: weatherData.name,\r\n    country: weatherData.sys.country,\r\n    lat: Math.round(weatherData.coord.lat),\r\n    lon: Math.round(weatherData.coord.lon),\r\n  };\r\n\r\n  const currentWeather: ICurrentWeather = {\r\n    temp: Math.round(weatherData.main.temp),\r\n    weatherIcon: weatherData.weather[0].main,\r\n    description: weatherData.weather[0].description,\r\n    realFeel: Math.round(weatherData.main.feels_like),\r\n    humidity: weatherData.main.humidity,\r\n    pressure: weatherData.main.pressure,\r\n    uvIndex: 1,\r\n  };\r\n\r\n  const wind: IWind = {\r\n    speed: Math.round(weatherData.wind.speed),\r\n    direction: evaluateDirection(weatherData.wind.deg),\r\n    degree: weatherData.wind.deg,\r\n  };\r\n\r\n  const temperatureInfo: ITemperatureInfo = {\r\n    min: Math.round(weatherData.main.temp_min),\r\n    max: Math.round(weatherData.main.temp_max),\r\n    avg: Math.round((weatherData.main.temp_max + weatherData.main.temp_min) / 2),\r\n  };\r\n\r\n  return { cityCoords, currentWeather, wind, temperatureInfo };\r\n};\r\n\r\nexport const fetchAirConditions = async (coords: { lon: number; lat: number }): Promise<IAir> => {\r\n  const { lat, lon } = coords;\r\n\r\n  const airURL = `https://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${WEATHER_KEY}`;\r\n\r\n  const fetchedData = await fetch(airURL);\r\n  const air = await fetchedData.json();\r\n\r\n  const { pm2_5, pm10, no2, so2, o3 } = air.list[0].components;\r\n\r\n  const modifiedData = {\r\n    index: air.list[0].main.aqi,\r\n    pm2_5: Math.round(pm2_5),\r\n    pm10: Math.round(pm10),\r\n    no2: Math.round(no2),\r\n    so2: Math.round(so2),\r\n    o3: Math.round(o3),\r\n  };\r\n\r\n  return modifiedData;\r\n};\r\n\r\nexport const fetchAstronomicalData = async (coords: {\r\n  lon: number;\r\n  lat: number;\r\n}): Promise<IAstronomicalData> => {\r\n  const { lon, lat } = coords;\r\n\r\n  const astroURL = `https://api.ipgeolocation.io/astronomy?apiKey=${ASTRONOMY_KEY}&lat=${lat}&long=${lon}`;\r\n\r\n  const fetchedData = await fetch(astroURL);\r\n  const astroData = await fetchedData.json();\r\n\r\n  const modifiedData: IAstronomicalData = {\r\n    sunrise: astroData.sunrise,\r\n    sunset: astroData.sunset,\r\n    moonrise: astroData.moonrise,\r\n    moonset: astroData.moonset,\r\n  };\r\n\r\n  return modifiedData;\r\n};\r\n","const theme = {\r\n  colors: {\r\n    primary: '#9d0208ff',\r\n    secondary: '#FFD770',\r\n    background: '#FFE8AD',\r\n    tilesBackground: '#FDFBFB',\r\n  },\r\n  fontWeights: {\r\n    thin: 300,\r\n    regular: 400,\r\n    bold: 700,\r\n  },\r\n  fontSizes: {\r\n    sm: '.6rem',\r\n    md: '1rem',\r\n    lg: '2rem',\r\n  },\r\n  media: {\r\n    tablet: '@media (min-width: 500px)',\r\n    desktop: '@media (min-width: 900px)',\r\n    hd: `@media (min-width: 1600px)`,\r\n  },\r\n  shadow: '2px 2px 2px rgba(0, 0, 0, 0.2)',\r\n};\r\n\r\nexport default theme;\r\n\r\n// --xiketic: #03071eff;\r\n// --dark-sienna: #370617ff;\r\n// --rosewood: #6a040fff;\r\n// --dark-red: #9d0208ff;\r\n// --rosso-corsa: #d00000ff;\r\n// --vermilion: #dc2f02ff;\r\n// --persimmon: #e85d04ff;\r\n// --carrot-orange: #f48c06ff;\r\n// --orange-web: #faa307ff;\r\n// --selective-yellow: #ffba08ff;\r\n","export default __webpack_public_path__ + \"static/media/Righteous-Regular.fd011047.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-Regular.3cd78665.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-Medium.e2d60bc4.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-SemiBold.fa8441f3.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-Bold.079ca05d.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-ExtraBold.1944c8d1.ttf\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nimport Righteous from './Righteous-Regular.ttf';\r\nimport MontserratRegular from './Montserrat-Regular.ttf';\r\nimport MontserratMedium from './Montserrat-Medium.ttf';\r\nimport MontserratSemiBold from './Montserrat-SemiBold.ttf';\r\nimport MontserratBold from './Montserrat-Bold.ttf';\r\nimport MontserratExtraBold from './Montserrat-ExtraBold.ttf';\r\n\r\nexport default createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'Righteous';\r\n        src: url(${Righteous});\r\n        font-weight: 700;\r\n        font-style: bold;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratRegular});\r\n        font-weight: 400;\r\n        font-style: normal;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratMedium});\r\n        font-weight: 500;\r\n        font-style: medium;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratSemiBold});\r\n        font-weight: 600;\r\n        font-style: semi-bold;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratBold});\r\n        font-weight: 700;\r\n        font-style: bold;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratExtraBold});\r\n        font-weight: 800;\r\n        font-style: extra-bold;\r\n    }\r\n`;\r\n","import { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\n\nimport Header from './components/Header/Header';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport WeatherDetails from './components/WeatherDetails/WeatherDetails';\n\nimport { fetchWeatherConditions, fetchAirConditions, fetchAstronomicalData } from './api/api';\n\nimport { ICurrentWeather, IWind, ITemperatureInfo, IAir, IAstronomicalData } from './interfaces';\n\nimport theme from './utils/theme';\nimport GlobalFonts from './fonts/fonts';\n\nconst GlobalStyles = createGlobalStyle`\n  body { \n    height: 100vh;\n    background: ${({ theme }) => theme.colors.background};\n  }\n  \n  *, *::before, *::after {\n    margin: 0;\n    padding: 0;\n    font-family: \"Montserrat\";\n    box-sizing: border-box;\n    user-select: none;\n  }\n  `;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 10px;\n\n  ${({ theme }) => theme.media.tablet} {\n    padding: 20px 30px;\n  }\n\n  ${({ theme }) => theme.media.hd} {\n    padding: 20px 150px;\n  }\n`;\n\nconst Loading = styled.h1`\n  margin-top: 10vh;\n  text-align: center;\n\n  ::after {\n    content: '.';\n    animation: dots 1.5s steps(5, end) infinite;\n  }\n\n  @keyframes dots {\n    0%,\n    20% {\n      color: rgba(0, 0, 0, 0);\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    40% {\n      color: black;\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    60% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    80%,\n    100% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 black;\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 10vh;\n  text-align: center;\n\n  p:first-child {\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  p:last-child {\n    font-size: 2rem;\n    margin-top: 20px;\n    font-weight: 700;\n  }\n\n  ${({ theme }) => theme.media.hd} {\n    p:first-child {\n      font-size: 2rem;\n    }\n\n    p:last-child {\n      font-size: 3rem;\n    }\n  }\n`;\n\nconst App: React.FC = () => {\n  const [searchedCityName, setSearchedCityName] = useState<string | null>('lublin');\n  const [cityCoords, setCityCoords] = useState({\n    city: 'lublin',\n    country: 'PL',\n    lon: 51,\n    lat: 23,\n  });\n  const [currentWeather, setCurrentWeather] = useState<ICurrentWeather | undefined>();\n  const [wind, setWind] = useState<IWind | undefined>();\n  const [air, setAir] = useState<IAir | undefined>();\n  const [temperatureInfo, setTemperatureInfo] = useState<ITemperatureInfo | undefined>();\n  const [day, setDay] = useState<IAstronomicalData | undefined>();\n\n  const { data: weatherData, error, isSuccess, isLoading } = useQuery(\n    ['weather', searchedCityName],\n    () => fetchWeatherConditions(searchedCityName)\n  );\n  const { data: airData, isSuccess: airFetchIsSuccess } = useQuery(['air', cityCoords], () =>\n    fetchAirConditions(cityCoords)\n  );\n  const { data: astroData, isSuccess: astroFetchIsSuccess } = useQuery(['astro', cityCoords], () =>\n    fetchAstronomicalData(cityCoords)\n  );\n\n  useEffect(() => {\n    if (weatherData) {\n      setCityCoords(weatherData?.cityCoords);\n      setCurrentWeather(weatherData?.currentWeather);\n      setWind(weatherData?.wind);\n      setTemperatureInfo(weatherData?.temperatureInfo);\n    }\n  }, [weatherData]);\n\n  useEffect(() => {\n    if (airFetchIsSuccess) {\n      setAir(airData);\n    }\n\n    if (astroFetchIsSuccess) {\n      setDay(astroData);\n    }\n  }, [airData, astroData]);\n\n  const renderWeatherPanel = () => {\n    if (isLoading) {\n      return <Loading>Looking for the weather</Loading>;\n    }\n\n    if (isSuccess) {\n      return currentWeather && air && wind && temperatureInfo && day ? (\n        <WeatherDetails\n          weather={currentWeather}\n          air={air}\n          wind={wind}\n          temperatureInfo={temperatureInfo}\n          day={day}\n        />\n      ) : null;\n    }\n\n    if (error) {\n      console.log(error);\n      return (\n        <ErrorMessage>\n          <p>It seems that the given location doesn't exist...</p>\n          <p>Try again!</p>\n        </ErrorMessage>\n      );\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <GlobalFonts />\n      <Wrapper>\n        <Header>Weather App</Header>\n        {currentWeather && cityCoords ? (\n          <SearchBar\n            setCityName={setSearchedCityName}\n            city={cityCoords.city}\n            country={cityCoords.country}\n          />\n        ) : null}\n        {renderWeatherPanel()}\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nimport App from './App';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}