{"version":3,"sources":["components/Header/Header.ts","store/types.ts","components/SearchBar/SearchBar.tsx","store/actions.ts","components/CurrentWeather/CurrentWeather.tsx","components/WindConditions/WindConditions.tsx","components/OtherDetails/subcomponents/DayDetails.tsx","components/OtherDetails/subcomponents/AirDetails.tsx","components/OtherDetails/subcomponents/TemperatureDetails.tsx","components/OtherDetails/OtherDetails.tsx","utils/theme.ts","fonts/Righteous-Regular.ttf","fonts/Montserrat-Regular.ttf","fonts/Montserrat-Medium.ttf","fonts/Montserrat-SemiBold.ttf","fonts/Montserrat-Bold.ttf","fonts/Montserrat-ExtraBold.ttf","fonts/fonts.ts","api/api.ts","App.tsx","store/reducer.ts","index.tsx","store/index.ts"],"names":["Header","styled","header","theme","fontSizes","lg","colors","primary","media","hd","SET_SEARCHED_CITY","SET_CITY_COORDS","SET_CURRENT_WEATHER","SET_WIND","SET_AIR","SET_TEMPERATURE_INFO","SET_ASTRONOMICAL_DATA","Bar","div","tilesBackground","shadow","tablet","CityNameWrapper","Icon","Location","CityName","p","CountryName","InputWrapper","desktop","Input","input","secondary","Button","button","mapDispatchToProps","setCityName","name","type","connect","state","city","cityCoords","country","inputRef","useRef","placeholder","size","ref","onClick","current","value","toLowerCase","trim","Container","Title","Temperature","Sky","IconDescription","OtherConditions","ul","currentWeather","weather","temp","weatherIcon","description","realFeel","humidity","pressure","uvIndex","props","icon","wind","speed","direction","degree","SunIcon","Sunny","MoonIcon","Moon","astronomicalData","sunrise","sunset","moonrise","moonset","air","index","pm2_5","pm10","no2","so2","o3","determineAirQuality","temperatureInfo","min","max","avg","OtherDetails","background","fontWeights","thin","regular","bold","sm","md","createGlobalStyle","Righteous","MontserratRegular","MontserratMedium","MontserratSemiBold","MontserratBold","MontserratExtraBold","WEATHER_KEY","evaluateWindDirection","degrees","directions","Math","floor","length","fetchWeatherConditions","a","weatherURL","fetch","fetchedData","json","weatherData","sys","lat","round","coord","lon","main","feels_like","deg","temp_min","temp_max","fetchAirConditions","coords","airURL","list","components","modifiedData","aqi","fetchAstronomicalData","astroURL","astroData","GlobalStyles","Wrapper","Loading","h1","WeatherPanelGrid","ErrorMessage","setCityCoords","setCurrentWeather","setWind","setAir","setTemperatureInfo","setAstronomicalData","searchedCityName","useQuery","data","error","isSuccess","isLoading","airData","useEffect","initialState","WeatherReducer","action","store","createStore","composeWithDevTools","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","ReactDOM","render","StrictMode","QueryClientProvider","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.097c520c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  font-size: ${({ theme }) => theme.fontSizes.lg};\r\n  font-weight: 700;\r\n  font-family: 'Righteous';\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import {\r\n  IAir,\r\n  IAstronomicalData,\r\n  ICityCoords,\r\n  ICurrentWeather,\r\n  ITemperatureInfo,\r\n  IWind,\r\n} from '../interfaces';\r\n\r\nexport const SET_SEARCHED_CITY = 'SET_SEARCHED_CITY';\r\nexport const SET_CITY_COORDS = 'SET_CITY_COORDS';\r\nexport const SET_CURRENT_WEATHER = 'SET_CURRENT_WEATHER';\r\nexport const SET_WIND = 'SET_WIND';\r\nexport const SET_AIR = 'SET_AIR';\r\nexport const SET_TEMPERATURE_INFO = 'SET_TEMPERATURE_INFO';\r\nexport const SET_ASTRONOMICAL_DATA = 'SET_ASTRONOMICAL_DATA';\r\n\r\nexport interface IGlobalState {\r\n  searchedCityName: string;\r\n  cityCoords: ICityCoords;\r\n  currentWeather: ICurrentWeather;\r\n  wind: IWind;\r\n  air: IAir;\r\n  temperatureInfo: ITemperatureInfo;\r\n  astronomicalData: IAstronomicalData;\r\n}\r\n\r\nexport interface setSearchedCityAction {\r\n  type: typeof SET_SEARCHED_CITY;\r\n  name: string;\r\n}\r\n\r\nexport interface setCityCoordsAction {\r\n  type: typeof SET_CITY_COORDS;\r\n  cityCoords: ICityCoords;\r\n}\r\n\r\nexport interface setCurrentWeatherAction {\r\n  type: typeof SET_CURRENT_WEATHER;\r\n  currentWeather: ICurrentWeather;\r\n}\r\n\r\nexport interface setWindAction {\r\n  type: typeof SET_WIND;\r\n  wind: IWind;\r\n}\r\n\r\nexport interface setAirAction {\r\n  type: typeof SET_AIR;\r\n  air: IAir;\r\n}\r\n\r\nexport interface setTemperatureInfoAction {\r\n  type: typeof SET_TEMPERATURE_INFO;\r\n  temperatureInfo: ITemperatureInfo;\r\n}\r\n\r\nexport interface setAstronomicalDataAction {\r\n  type: typeof SET_ASTRONOMICAL_DATA;\r\n  astronomicalData: IAstronomicalData;\r\n}\r\n\r\nexport type GlobalStateActionTypes =\r\n  | setSearchedCityAction\r\n  | setCityCoordsAction\r\n  | setCurrentWeatherAction\r\n  | setWindAction\r\n  | setAirAction\r\n  | setTemperatureInfoAction\r\n  | setAstronomicalDataAction;\r\n","import { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { Location } from '@styled-icons/ionicons-solid';\r\n\r\nimport { AppState } from '../../store';\r\nimport { setCityName } from '../../store/actions';\r\n\r\nconst Bar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  margin: 20px 0;\r\n  padding: 5px 20px;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    margin-top: 60px;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nconst CityNameWrapper = styled.div`\r\n  display: flex;\r\n  min-width: 300px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled(Location)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  height: 40px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    height: 50px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\nconst CityName = styled.p`\r\n  align-self: flex-end;\r\n  padding-right: 5px;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst CountryName = styled.p`\r\n  padding-top: 10px;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  padding: 5px 0;\r\n  height: 40px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    height: 50px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    height: 55px;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  max-width: 800px;\r\n  padding-left: 20px;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  border: none;\r\n  border-radius: 15px 0 0 15px;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  outline: none;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 80px;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 1.1rem;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 0 15px 15px 0;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    width: 120px;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  setCityName: (name: string) => void;\r\n  city: string;\r\n  country: string;\r\n}\r\n\r\nconst SearchBar: React.FC<IProps> = ({ setCityName, city, country }) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const onClickHandler = () => {\r\n    if (inputRef?.current) {\r\n      setCityName(inputRef.current.value.toLowerCase().trim());\r\n      inputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Bar>\r\n      <CityNameWrapper>\r\n        <Icon />\r\n        <CityName>{city}</CityName>\r\n        <CountryName>/ {country}</CountryName>\r\n      </CityNameWrapper>\r\n      <InputWrapper>\r\n        <Input type=\"text\" placeholder=\"search location...\" size={10} ref={inputRef} />\r\n        <Button onClick={onClickHandler}>search</Button>\r\n      </InputWrapper>\r\n    </Bar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    city: state.cityCoords.city,\r\n    country: state.cityCoords.country,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setCityName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","import {\r\n  IAir,\r\n  IAstronomicalData,\r\n  ICityCoords,\r\n  ICurrentWeather,\r\n  ITemperatureInfo,\r\n  IWind,\r\n} from '../interfaces';\r\nimport {\r\n  SET_SEARCHED_CITY,\r\n  SET_CITY_COORDS,\r\n  SET_CURRENT_WEATHER,\r\n  SET_WIND,\r\n  SET_AIR,\r\n  SET_TEMPERATURE_INFO,\r\n  SET_ASTRONOMICAL_DATA,\r\n} from '../store/types';\r\n\r\nexport const setCityName = (name: string) => {\r\n  return {\r\n    type: SET_SEARCHED_CITY,\r\n    name,\r\n  };\r\n};\r\n\r\nexport const setCityCoords = (cityCoords: ICityCoords) => {\r\n  return {\r\n    type: SET_CITY_COORDS,\r\n    cityCoords,\r\n  };\r\n};\r\n\r\nexport const setCurrentWeather = (currentWeather: ICurrentWeather) => {\r\n  return {\r\n    type: SET_CURRENT_WEATHER,\r\n    currentWeather,\r\n  };\r\n};\r\n\r\nexport const setWind = (wind: IWind) => {\r\n  return {\r\n    type: SET_WIND,\r\n    wind,\r\n  };\r\n};\r\n\r\nexport const setAir = (air: IAir) => {\r\n  return {\r\n    type: SET_AIR,\r\n    air,\r\n  };\r\n};\r\n\r\nexport const setTemperatureInfo = (temperatureInfo: ITemperatureInfo) => {\r\n  return {\r\n    type: SET_TEMPERATURE_INFO,\r\n    temperatureInfo,\r\n  };\r\n};\r\n\r\nexport const setAstronomicalData = (astronomicalData: IAstronomicalData) => {\r\n  return {\r\n    type: SET_ASTRONOMICAL_DATA,\r\n    astronomicalData,\r\n  };\r\n};\r\n","import { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Rainy,\r\n  Cloud,\r\n  Sunny,\r\n  Thunderstorm,\r\n  Snow,\r\n  ReorderThree,\r\n} from '@styled-icons/ionicons-solid';\r\n\r\nimport { ICurrentWeather } from '../../interfaces';\r\nimport { AppState } from '../../store';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  user-select: none;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    grid-row: 1/3;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    padding: 40px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.p`\r\n  align-self: flex-start;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst Temperature = styled.p`\r\n  margin: 40px 0;\r\n  font-size: 3rem;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  span {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    margin: 70px 0;\r\n    font-size: 4rem;\r\n\r\n    span {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sky = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 5px 10px;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  border-radius: 15px;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    margin: 15px 0;\r\n    padding: 10px 20px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  color: white;\r\n  height: 40px;\r\n  width: 40px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    height: 50px;\r\n    width: 50px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n    width: 70px;\r\n  }\r\n`;\r\n\r\nconst IconDescription = styled.p`\r\n  color: white;\r\n  font-weight: 500;\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst OtherConditions = styled.ul`\r\n  margin-top: 15px;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  list-style-type: none;\r\n\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid black;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    font-size: 1.6rem;\r\n\r\n    li {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface CurrentWeatherProps {\r\n  weather: ICurrentWeather;\r\n}\r\n\r\nconst CurrentWeather: React.FC<CurrentWeatherProps> = (props) => {\r\n  const {\r\n    temp,\r\n    weatherIcon,\r\n    description,\r\n    realFeel,\r\n    humidity,\r\n    pressure,\r\n    uvIndex,\r\n  } = props.weather;\r\n\r\n  const chooseWeatherIcon = (icon: string) => {\r\n    if (icon === 'Clear') return <Sunny />;\r\n    if (icon === 'Clouds') return <Cloud />;\r\n    if (icon === 'Snow') return <Snow />;\r\n    if (icon === 'Rain' || icon === 'Drizzle') return <Rainy />;\r\n    if (icon === 'Thunderstorm') return <Thunderstorm />;\r\n    if (icon === 'Mist' || icon === 'Fog') return <ReorderThree />;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Current Weather</Title>\r\n      <Temperature>\r\n        {temp}\r\n        <span>&#176;C</span>\r\n      </Temperature>\r\n      <Sky>\r\n        <Icon>{chooseWeatherIcon(weatherIcon)}</Icon>\r\n        <IconDescription>{description}</IconDescription>\r\n      </Sky>\r\n      <OtherConditions>\r\n        <li>\r\n          <p>RealFeel</p>\r\n          <p>{`${realFeel}`}&#176;C</p>\r\n        </li>\r\n        <li>\r\n          <p>Humidity</p>\r\n          <p>{`${humidity}%`}</p>\r\n        </li>\r\n        <li>\r\n          <p>Pressure</p>\r\n          <p>{`${pressure} hPa`}</p>\r\n        </li>\r\n        <li>\r\n          <p>UV-Index</p>\r\n          <p>{uvIndex}</p>\r\n        </li>\r\n      </OtherConditions>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  const {\r\n    temp,\r\n    weatherIcon,\r\n    description,\r\n    realFeel,\r\n    humidity,\r\n    pressure,\r\n    uvIndex,\r\n  } = state.currentWeather;\r\n\r\n  return {\r\n    weather: { temp, weatherIcon, description, realFeel, humidity, pressure, uvIndex },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrentWeather);\r\n","import { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { IWind } from '../../interfaces';\r\nimport { AppState } from '../../store';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  user-select: none;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    padding: 10px 0;\r\n    transition: background 0.3s;\r\n\r\n    &:first-child {\r\n      border-radius: 15px 15px 0 0;\r\n    }\r\n\r\n    &:last-child {\r\n      border-radius: 0 0 15px 15px;\r\n    }\r\n\r\n    &:not(:last-child) {\r\n      border-bottom: 1px solid #999;\r\n    }\r\n\r\n    &:hover {\r\n      background: #ccc;\r\n    }\r\n\r\n    p:first-child {\r\n      margin-bottom: 5px;\r\n      font-weight: 700;\r\n    }\r\n\r\n    p:last-child {\r\n      font-weight: 700;\r\n      color: ${({ theme }) => theme.colors.primary};\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    flex-direction: row;\r\n\r\n    div:not(:last-child) {\r\n      border-bottom: none;\r\n      border-right: 1px solid #999;\r\n    }\r\n\r\n    div:first-child {\r\n      border-radius: 15px 0 0 15px;\r\n    }\r\n\r\n    div:last-child {\r\n      border-radius: 0 15px 15px 0;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    p {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface WindConditionsProps {\r\n  wind: IWind;\r\n}\r\n\r\nconst WindConditions: React.FC<WindConditionsProps> = (props) => {\r\n  const { speed, direction, degree } = props.wind;\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <p>Wind Speed</p>\r\n        <p>{speed} km/h</p>\r\n      </div>\r\n      <div>\r\n        <p>Wind Direction</p>\r\n        <p>{direction}</p>\r\n      </div>\r\n      <div>\r\n        <p>Wind Degree</p>\r\n        <p>{degree}</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  const { speed, direction, degree } = state.wind;\r\n\r\n  return {\r\n    wind: { speed, direction, degree },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WindConditions);\r\n","import { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Sunny, Moon } from '@styled-icons/ionicons-solid';\r\n\r\nimport { IAstronomicalData } from '../../../interfaces';\r\nimport { AppState } from '../../../store';\r\n\r\nconst Container = styled.div`\r\n  grid-area: day;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  div {\r\n    flex-basis: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 15px 0;\r\n    border-bottom: 1px solid #999;\r\n    transition: background 0.3s;\r\n\r\n    &:first-child {\r\n      border-radius: 15px 0 0 0;\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      border-radius: 0 15px 0 0;\r\n    }\r\n\r\n    &:nth-child(even) {\r\n      border-left: 1px solid #999;\r\n    }\r\n\r\n    &:hover {\r\n      background: #ccc;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.8rem;\r\n\r\n      &:first-of-type {\r\n        margin: 10px 0 5px 0;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.media.tablet} {\r\n      flex-basis: 25%;\r\n\r\n      &:nth-child(2) {\r\n        border-right: 1px solid #999;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        border-radius: 0;\r\n      }\r\n\r\n      &:last-child {\r\n        border-radius: 0 15px 0 0;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.media.desktop} {\r\n      p {\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.media.hd} {\r\n      p {\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SunIcon = styled(Sunny)`\r\n  height: 40px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\nconst MoonIcon = styled(Moon)`\r\n  height: 40px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\ninterface DayDetailsProps {\r\n  astronomicalData: IAstronomicalData;\r\n}\r\n\r\nconst DayDetails: React.FC<DayDetailsProps> = ({\r\n  astronomicalData: { sunrise, sunset, moonrise, moonset },\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <SunIcon />\r\n        <p>Sunrise Time</p>\r\n        <p>{sunrise}</p>\r\n      </div>\r\n      <div>\r\n        <SunIcon />\r\n        <p>Sunset Time</p>\r\n        <p>{sunset}</p>\r\n      </div>\r\n      <div>\r\n        <MoonIcon />\r\n        <p>Moonrise Time</p>\r\n        <p>{moonrise}</p>\r\n      </div>\r\n      <div>\r\n        <MoonIcon />\r\n        <p>Moonset Time</p>\r\n        <p>{moonset}</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  const { sunrise, sunset, moonrise, moonset } = state.astronomicalData;\r\n\r\n  return {\r\n    astronomicalData: {\r\n      sunrise,\r\n      sunset,\r\n      moonrise,\r\n      moonset,\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DayDetails);\r\n","import { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { IAir } from '../../../interfaces';\r\nimport { AppState } from '../../../store';\r\n\r\nconst Container = styled.div`\r\n  grid-area: air;\r\n\r\n  padding: 20px;\r\n  border-bottom: 1px solid #999;\r\n\r\n  & > p {\r\n    font-weight: 600;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 10px 0;\r\n    padding: 5px 20px;\r\n    font-weight: 500;\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    border-bottom: 10px solid ${({ theme }) => theme.colors.primary};\r\n    border-radius: 10px;\r\n\r\n    p:first-child {\r\n      font-size: 2rem;\r\n      font-weight: 800;\r\n    }\r\n\r\n    p:last-child {\r\n      font-weight: 700;\r\n      font-size: 1.2rem;\r\n      color: #666;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    display: flex;\r\n    list-style-type: none;\r\n\r\n    li {\r\n      flex-grow: 1;\r\n      text-align: center;\r\n\r\n      p:first-child {\r\n        font-weight: 700;\r\n        color: ${({ theme }) => theme.colors.primary};\r\n      }\r\n\r\n      p:last-child {\r\n        font-size: 0.7rem;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    border-right: 1px solid #999;\r\n    border-bottom: none;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    & > p {\r\n      font-size: 1.8rem;\r\n    }\r\n\r\n    div {\r\n      margin-top: 30px;\r\n      height: 90px;\r\n\r\n      p:first-child {\r\n        font-size: 3.5rem;\r\n      }\r\n\r\n      p:last-child {\r\n        font-size: 2rem;\r\n      }\r\n    }\r\n\r\n    ul {\r\n      margin-top: 30px;\r\n      li {\r\n        p:first-child {\r\n          font-size: 1.8rem;\r\n        }\r\n\r\n        p:last-child {\r\n          font-size: 1.2rem;\r\n          font-weight: 600;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface AirDetailsProps {\r\n  air: IAir;\r\n}\r\n\r\nconst AirDetails: React.FC<AirDetailsProps> = (props) => {\r\n  const { index, pm2_5, pm10, no2, so2, o3 } = props.air;\r\n\r\n  const determineAirQuality = (index: number) => {\r\n    const levels = ['Good', 'Fair', 'Moderate', 'Poor', 'Very Poor'];\r\n\r\n    return levels[index - 1];\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <p>Air Quality Index (AQI)</p>\r\n      <div>\r\n        <p>{index}</p>\r\n        <p>{determineAirQuality(index)}</p>\r\n      </div>\r\n      <ul>\r\n        <li>\r\n          <p>{pm2_5}</p>\r\n          <p>pm2.5</p>\r\n        </li>\r\n        <li>\r\n          <p>{pm10}</p>\r\n          <p>pm10</p>\r\n        </li>\r\n        <li>\r\n          <p>{no2}</p>\r\n          <p>NO2</p>\r\n        </li>\r\n        <li>\r\n          <p>{so2}</p>\r\n          <p>SO2</p>\r\n        </li>\r\n        <li>\r\n          <p>{o3}</p>\r\n          <p>03</p>\r\n        </li>\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  const { index, pm2_5, pm10, no2, so2, o3 } = state.air;\r\n\r\n  return {\r\n    air: {\r\n      index,\r\n      pm2_5,\r\n      pm10,\r\n      no2,\r\n      so2,\r\n      o3,\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AirDetails);\r\n","import { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ITemperatureInfo } from '../../../interfaces';\r\nimport { AppState } from '../../../store';\r\n\r\nconst Container = styled.div`\r\n  grid-area: temp;\r\n  padding: 20px;\r\n  font-weight: 500;\r\n  list-style-type: none;\r\n\r\n  & > p {\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid black;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    & > p {\r\n      margin-bottom: 30px;\r\n      font-size: 1.8rem;\r\n    }\r\n\r\n    li {\r\n      margin-bottom: 20px;\r\n      p {\r\n        font-size: 1.6rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface TemperatureDetailsProps {\r\n  temperatureInfo: ITemperatureInfo;\r\n}\r\n\r\nconst TemperatureDetails: React.FC<TemperatureDetailsProps> = ({\r\n  temperatureInfo: { min, max, avg },\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <p>Temperature-Info</p>\r\n      <ul>\r\n        <li>\r\n          <p>Min Temp</p>\r\n          <p>{min}</p>\r\n        </li>\r\n        <li>\r\n          <p>Max Temp</p>\r\n          <p>{max}</p>\r\n        </li>\r\n        <li>\r\n          <p>Avg Temp</p>\r\n          <p>{avg}</p>\r\n        </li>\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  const { min, max, avg } = state.temperatureInfo;\r\n\r\n  return {\r\n    temperatureInfo: {\r\n      min,\r\n      max,\r\n      avg,\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TemperatureDetails);\r\n","import styled from 'styled-components';\r\n\r\nimport DayDetails from './subcomponents/DayDetails';\r\nimport AirDetails from './subcomponents/AirDetails';\r\nimport TemperatureDetails from './subcomponents/TemperatureDetails';\r\n\r\nimport { IAir, ITemperatureInfo, IAstronomicalData } from '../../interfaces';\r\nimport { AppState } from '../../store';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: repeat(3, auto);\r\n  grid-template-areas:\r\n    'day day'\r\n    'air air'\r\n    'temp temp';\r\n  margin-bottom: 50px;\r\n  background: ${({ theme }) => theme.colors.tilesBackground};\r\n  border-radius: 15px;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    grid-column: 1/3;\r\n    margin-bottom: 0;\r\n\r\n    grid-template-rows: 40% 60%;\r\n    grid-template-areas:\r\n      'day day'\r\n      'air temp';\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    grid-column: 2/3;\r\n  }\r\n`;\r\n\r\nconst OtherDetails: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <DayDetails />\r\n      <AirDetails />\r\n      <TemperatureDetails />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OtherDetails;\r\n","const theme = {\r\n  colors: {\r\n    primary: '#9d0208ff',\r\n    secondary: '#FFD770',\r\n    background: '#FFE8AD',\r\n    tilesBackground: '#FDFBFB',\r\n  },\r\n  fontWeights: {\r\n    thin: 300,\r\n    regular: 400,\r\n    bold: 700,\r\n  },\r\n  fontSizes: {\r\n    sm: '.6rem',\r\n    md: '1rem',\r\n    lg: '2rem',\r\n  },\r\n  media: {\r\n    tablet: '@media (min-width: 500px)',\r\n    desktop: '@media (min-width: 900px)',\r\n    hd: `@media (min-width: 1600px)`,\r\n  },\r\n  shadow: '2px 2px 2px rgba(0, 0, 0, 0.2)',\r\n};\r\n\r\nexport default theme;\r\n","export default __webpack_public_path__ + \"static/media/Righteous-Regular.fd011047.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-Regular.3cd78665.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-Medium.e2d60bc4.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-SemiBold.fa8441f3.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-Bold.079ca05d.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-ExtraBold.1944c8d1.ttf\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nimport Righteous from './Righteous-Regular.ttf';\r\nimport MontserratRegular from './Montserrat-Regular.ttf';\r\nimport MontserratMedium from './Montserrat-Medium.ttf';\r\nimport MontserratSemiBold from './Montserrat-SemiBold.ttf';\r\nimport MontserratBold from './Montserrat-Bold.ttf';\r\nimport MontserratExtraBold from './Montserrat-ExtraBold.ttf';\r\n\r\nexport default createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'Righteous';\r\n        src: url(${Righteous});\r\n        font-weight: 700;\r\n        font-style: bold;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratRegular});\r\n        font-weight: 400;\r\n        font-style: normal;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratMedium});\r\n        font-weight: 500;\r\n        font-style: medium;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratSemiBold});\r\n        font-weight: 600;\r\n        font-style: semi-bold;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratBold});\r\n        font-weight: 700;\r\n        font-style: bold;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Montserrat';\r\n        src: url(${MontserratExtraBold});\r\n        font-weight: 800;\r\n        font-style: extra-bold;\r\n    }\r\n`;\r\n","import {\r\n  ICityCoords,\r\n  ICurrentWeather,\r\n  IWind,\r\n  IAir,\r\n  ITemperatureInfo,\r\n  IAstronomicalData,\r\n} from '../interfaces';\r\n\r\nconst WEATHER_KEY = '027a8465a4b7db22cb00cc2655cd0849';\r\nconst ASTRONOMY_KEY = '2180e19e9e834b95aa55747ecc772869';\r\n\r\ninterface IWeatherConditions {\r\n  cityCoords: ICityCoords;\r\n  currentWeather: ICurrentWeather;\r\n  wind: IWind;\r\n  temperatureInfo: ITemperatureInfo;\r\n}\r\n\r\nconst evaluateWindDirection = (degrees: number) => {\r\n  const directions = ['↑ N', '↗ NE', '→ E', '↘ SE', '↓ S', '↙ SW', '← W', '↖ NW'];\r\n  const value = Math.floor(degrees / 45);\r\n\r\n  return directions[value % directions.length];\r\n};\r\n\r\nexport const fetchWeatherConditions = async (city: string | null): Promise<IWeatherConditions> => {\r\n  const weatherURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${WEATHER_KEY}&units=metric`;\r\n\r\n  const fetchedData = await fetch(weatherURL);\r\n  const weatherData = await fetchedData.json();\r\n\r\n  const cityCoords: ICityCoords = {\r\n    city: weatherData.name,\r\n    country: weatherData.sys.country,\r\n    lat: Math.round(weatherData.coord.lat),\r\n    lon: Math.round(weatherData.coord.lon),\r\n  };\r\n\r\n  const currentWeather: ICurrentWeather = {\r\n    temp: Math.round(weatherData.main.temp),\r\n    weatherIcon: weatherData.weather[0].main,\r\n    description: weatherData.weather[0].description,\r\n    realFeel: Math.round(weatherData.main.feels_like),\r\n    humidity: weatherData.main.humidity,\r\n    pressure: weatherData.main.pressure,\r\n    uvIndex: 1,\r\n  };\r\n\r\n  const wind: IWind = {\r\n    speed: Math.round(weatherData.wind.speed),\r\n    direction: evaluateWindDirection(weatherData.wind.deg),\r\n    degree: weatherData.wind.deg,\r\n  };\r\n\r\n  const temperatureInfo: ITemperatureInfo = {\r\n    min: Math.round(weatherData.main.temp_min),\r\n    max: Math.round(weatherData.main.temp_max),\r\n    avg: Math.round((weatherData.main.temp_max + weatherData.main.temp_min) / 2),\r\n  };\r\n\r\n  return { cityCoords, currentWeather, wind, temperatureInfo };\r\n};\r\n\r\nexport const fetchAirConditions = async (coords: { lon: number; lat: number }): Promise<IAir> => {\r\n  const { lat, lon } = coords;\r\n\r\n  const airURL = `https://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${WEATHER_KEY}`;\r\n\r\n  const fetchedData = await fetch(airURL);\r\n  const air = await fetchedData.json();\r\n\r\n  const { pm2_5, pm10, no2, so2, o3 } = air.list[0].components;\r\n\r\n  const modifiedData = {\r\n    index: air.list[0].main.aqi,\r\n    pm2_5: Math.round(pm2_5),\r\n    pm10: Math.round(pm10),\r\n    no2: Math.round(no2),\r\n    so2: Math.round(so2),\r\n    o3: Math.round(o3),\r\n  };\r\n\r\n  return modifiedData;\r\n};\r\n\r\nexport const fetchAstronomicalData = async (coords: {\r\n  lon: number;\r\n  lat: number;\r\n}): Promise<IAstronomicalData> => {\r\n  const { lon, lat } = coords;\r\n\r\n  const astroURL = `https://api.ipgeolocation.io/astronomy?apiKey=${ASTRONOMY_KEY}&lat=${lat}&long=${lon}`;\r\n\r\n  const fetchedData = await fetch(astroURL);\r\n  const astroData = await fetchedData.json();\r\n\r\n  const modifiedData: IAstronomicalData = {\r\n    sunrise: astroData.sunrise,\r\n    sunset: astroData.sunset,\r\n    moonrise: astroData.moonrise,\r\n    moonset: astroData.moonset,\r\n  };\r\n\r\n  return modifiedData;\r\n};\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useQuery } from 'react-query';\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\r\n\r\nimport Header from './components/Header/Header';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\r\nimport WindConditions from './components/WindConditions/WindConditions';\r\nimport OtherDetails from './components/OtherDetails/OtherDetails';\r\n\r\nimport theme from './utils/theme';\r\nimport GlobalFonts from './fonts/fonts';\r\n\r\nimport { AppState } from './store';\r\nimport {\r\n  setCityCoords,\r\n  setCurrentWeather,\r\n  setWind,\r\n  setAir,\r\n  setTemperatureInfo,\r\n  setAstronomicalData,\r\n} from './store/actions';\r\n\r\nimport {\r\n  fetchWeatherConditions,\r\n  fetchAirConditions,\r\n  fetchAstronomicalData,\r\n} from './api/api';\r\n\r\nimport {\r\n  ICurrentWeather,\r\n  IWind,\r\n  ITemperatureInfo,\r\n  IAir,\r\n  IAstronomicalData,\r\n  ICityCoords,\r\n} from './interfaces';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  body { \r\n    height: 100vh;\r\n    background: ${({ theme }) => theme.colors.background};\r\n  }\r\n  \r\n  *, *::before, *::after {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: \"Montserrat\";\r\n    box-sizing: border-box;\r\n    user-select: none;\r\n  }\r\n  `;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px 10px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    padding: 20px 30px;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    padding: 20px 150px;\r\n  }\r\n`;\r\n\r\nconst Loading = styled.h1`\r\n  margin-top: 10vh;\r\n  text-align: center;\r\n\r\n  ::after {\r\n    content: '.';\r\n    animation: dots 1.5s steps(5, end) infinite;\r\n  }\r\n\r\n  @keyframes dots {\r\n    0%,\r\n    20% {\r\n      color: rgba(0, 0, 0, 0);\r\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\r\n    }\r\n    40% {\r\n      color: black;\r\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\r\n    }\r\n    60% {\r\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0);\r\n    }\r\n    80%,\r\n    100% {\r\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeatherPanelGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 15px;\r\n\r\n  ${({ theme }) => theme.media.tablet} {\r\n    grid-template-columns: 2fr 1fr;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    grid-template-columns: 2fr 3fr;\r\n    grid-template-rows: auto auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    grid-template-columns: 3fr 7fr;\r\n    grid-template-rows: auto auto;\r\n    gap: 25px;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  margin-top: 10vh;\r\n  text-align: center;\r\n\r\n  p:first-child {\r\n    font-size: 1.4rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  p:last-child {\r\n    font-size: 2rem;\r\n    margin-top: 20px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  ${({ theme }) => theme.media.hd} {\r\n    p:first-child {\r\n      font-size: 2rem;\r\n    }\r\n\r\n    p:last-child {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  searchedCityName: string;\r\n  cityCoords: ICityCoords;\r\n  setCityCoords: (coords: ICityCoords) => void;\r\n  setCurrentWeather: (currentWeather: ICurrentWeather) => void;\r\n  setWind: (wind: IWind) => void;\r\n  setAir: (air: IAir) => void;\r\n  setTemperatureInfo: (temperatureInfo: ITemperatureInfo) => void;\r\n  setAstronomicalData: (astronomicalData: IAstronomicalData) => void;\r\n}\r\n\r\nconst App: React.FC<IProps> = ({\r\n  searchedCityName,\r\n  cityCoords,\r\n  setCityCoords,\r\n  setCurrentWeather,\r\n  setWind,\r\n  setAir,\r\n  setTemperatureInfo,\r\n  setAstronomicalData,\r\n}) => {\r\n  const { data: weatherData, error, isSuccess, isLoading } = useQuery(\r\n    ['weather', searchedCityName],\r\n    () => fetchWeatherConditions(searchedCityName)\r\n  );\r\n  const { data: airData } = useQuery(['air', cityCoords], () =>\r\n    fetchAirConditions(cityCoords)\r\n  );\r\n  const { data: astroData } = useQuery(['astro', cityCoords], () =>\r\n    fetchAstronomicalData(cityCoords)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (weatherData) {\r\n      setCityCoords(weatherData?.cityCoords);\r\n      setCurrentWeather(weatherData?.currentWeather);\r\n      setWind(weatherData?.wind);\r\n      setTemperatureInfo(weatherData?.temperatureInfo);\r\n    }\r\n    if (airData) {\r\n      setAir(airData);\r\n    }\r\n\r\n    if (astroData) {\r\n      setAstronomicalData(astroData);\r\n    }\r\n  }, [weatherData, airData, astroData]);\r\n\r\n  const renderWeatherPanel = () => {\r\n    if (isLoading) {\r\n      return <Loading>Looking for the weather</Loading>;\r\n    }\r\n\r\n    if (isSuccess) {\r\n      return (\r\n        <WeatherPanelGrid>\r\n          <CurrentWeather />\r\n          <WindConditions />\r\n          <OtherDetails />\r\n        </WeatherPanelGrid>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <ErrorMessage>\r\n          <p>It seems that the given location doesn't exist...</p>\r\n          <p>Try again!</p>\r\n        </ErrorMessage>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <GlobalFonts />\r\n      <Wrapper>\r\n        <Header>Weather App</Header>\r\n        <SearchBar />\r\n        {renderWeatherPanel()}\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return {\r\n    searchedCityName: state.searchedCityName,\r\n    cityCoords: state.cityCoords,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setCityCoords,\r\n  setCurrentWeather,\r\n  setWind,\r\n  setAir,\r\n  setTemperatureInfo,\r\n  setAstronomicalData,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  IGlobalState,\r\n  SET_SEARCHED_CITY,\r\n  SET_CITY_COORDS,\r\n  SET_CURRENT_WEATHER,\r\n  SET_WIND,\r\n  SET_AIR,\r\n  SET_TEMPERATURE_INFO,\r\n  SET_ASTRONOMICAL_DATA,\r\n  GlobalStateActionTypes,\r\n} from './types';\r\n\r\nconst initialState: IGlobalState = {\r\n  searchedCityName: 'lublin',\r\n  cityCoords: {\r\n    city: 'lublin',\r\n    country: 'PL',\r\n    lon: 51,\r\n    lat: 23,\r\n  },\r\n  currentWeather: {\r\n    temp: 0,\r\n    weatherIcon: '',\r\n    description: '',\r\n    realFeel: 0,\r\n    humidity: 0,\r\n    pressure: 0,\r\n    uvIndex: 1,\r\n  },\r\n  wind: {\r\n    speed: 0,\r\n    direction: '',\r\n    degree: 0,\r\n  },\r\n  air: {\r\n    index: 0,\r\n    pm2_5: 0,\r\n    pm10: 0,\r\n    no2: 0,\r\n    so2: 0,\r\n    o3: 0,\r\n  },\r\n  temperatureInfo: {\r\n    min: 0,\r\n    max: 0,\r\n    avg: 0,\r\n  },\r\n  astronomicalData: {\r\n    sunrise: '',\r\n    sunset: '',\r\n    moonrise: '',\r\n    moonset: '',\r\n  },\r\n};\r\n\r\nexport const WeatherReducer = (state = initialState, action: GlobalStateActionTypes) => {\r\n  switch (action.type) {\r\n    case SET_SEARCHED_CITY:\r\n      return {\r\n        ...state,\r\n        searchedCityName: action.name,\r\n      };\r\n    case SET_CITY_COORDS:\r\n      const { city, country, lon, lat } = action.cityCoords;\r\n      return {\r\n        ...state,\r\n        cityCoords: {\r\n          city,\r\n          country,\r\n          lon,\r\n          lat,\r\n        },\r\n      };\r\n    case SET_CURRENT_WEATHER:\r\n      const {\r\n        temp,\r\n        weatherIcon,\r\n        description,\r\n        realFeel,\r\n        humidity,\r\n        pressure,\r\n        uvIndex,\r\n      } = action.currentWeather;\r\n      return {\r\n        ...state,\r\n        currentWeather: {\r\n          temp,\r\n          weatherIcon,\r\n          description,\r\n          realFeel,\r\n          humidity,\r\n          pressure,\r\n          uvIndex,\r\n        },\r\n      };\r\n    case SET_WIND:\r\n      const { speed, direction, degree } = action.wind;\r\n      return {\r\n        ...state,\r\n        wind: {\r\n          speed,\r\n          direction,\r\n          degree,\r\n        },\r\n      };\r\n    case SET_AIR:\r\n      const { index, pm2_5, pm10, no2, so2, o3 } = action.air;\r\n      return {\r\n        ...state,\r\n        air: {\r\n          index,\r\n          pm2_5,\r\n          pm10,\r\n          no2,\r\n          so2,\r\n          o3,\r\n        },\r\n      };\r\n    case SET_TEMPERATURE_INFO:\r\n      const { min, max, avg } = action.temperatureInfo;\r\n      return {\r\n        ...state,\r\n        temperatureInfo: {\r\n          min,\r\n          max,\r\n          avg,\r\n        },\r\n      };\r\n    case SET_ASTRONOMICAL_DATA:\r\n      const { sunrise, sunset, moonrise, moonset } = action.astronomicalData;\r\n      return {\r\n        ...state,\r\n        astronomicalData: {\r\n          sunrise,\r\n          sunset,\r\n          moonrise,\r\n          moonset,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { ReactQueryDevtools } from 'react-query/devtools';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\n\r\nimport configureStore from './store';\r\n\r\nconst store = configureStore();\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n        <ReactQueryDevtools initialIsOpen={false} />\r\n      </QueryClientProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { WeatherReducer } from './reducer';\r\n\r\nexport type AppState = ReturnType<typeof WeatherReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(WeatherReducer, composeWithDevTools());\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}